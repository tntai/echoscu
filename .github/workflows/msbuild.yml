name: MSBuild

on: 
  release:
    type:
      - created 

env:
  # Path to the solution file relative to the root of the project.
  SOLUTION_FILE_PATH: .

  # Configuration type to build.
  # You can convert this to a build matrix if you need coverage of multiple configuration types.
  # https://docs.github.com/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
  BUILD_CONFIGURATION: Release

jobs:
  build:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v2

    - name: setup-msbuild
      uses: microsoft/setup-msbuild@v1.0.2
    
    - name: cmake-configure
      # You may pin to the exact commit or the version.
      # uses: snickerbockers/cmake-configure@34c25d17135428976b13963a8e5e3b1b0b277fd1
      uses: snickerbockers/cmake-configure@prerel1
      
    - name: Build
      working-directory: ${{env.GITHUB_WORKSPACE}}
      # Add additional options to the MSBuild command line here (like platform or verbosity level).
      # See https://docs.microsoft.com/visualstudio/msbuild/msbuild-command-line-reference
      run: msbuild /m /p:Configuration=${{env.BUILD_CONFIGURATION}} ${{env.SOLUTION_FILE_PATH}}
      
    - name: Git Release
      # You may pin to the exact commit or the version.
      # uses: anton-yurchenko/git-release@03d3d85ec613c4ce4a71bdd251a3a835dd25295c
      uses: anton-yurchenko/git-release@v4.1.0
      with:
        # Release Assets
        args: ${{env.SOLUTION_FILE_PATH}}/*.exe
